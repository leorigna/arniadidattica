// INCLUSIONE LIBRERIE

#include "libohiboard.h"
#include "libohigrove/ohigrove.h"
#include "libohigrove/led.h"
#include "libohigrove/button.h"
#include "libohigrove/analog-in.h"
#include "libohigrove/serial.h"
#include "libohigrove/digital-out.h"
#include "libohigrove/infrared-tx.h"
#include "gpio.h"

int main(void)
{
    // DICHIARAZIONE VARIABILI
    int16_t i = 0;
    int16_t VAR = 0;
    int16_t T = 0;
    int16_t SERVO = 0;
    uint16_t valRx5 = 0;
    uint16_t rx1 = 0;
    uint16_t rx2 = 0;
    uint16_t rx3 = 0;
    uint16_t rx4 = 0;

    // CONFIGURAZIONE PIN RELE'
    Gpio_config (GPIO_PINS_PTC0, GPIO_PINS_OUTPUT);

    // CONFIGURAZIONE PIN LED
    Gpio_config (GPIO_PINS_PTC10, GPIO_PINS_OUTPUT);
    Gpio_config (GPIO_PINS_PTC11, GPIO_PINS_OUTPUT);
    Gpio_config (GPIO_PINS_PTC4, GPIO_PINS_OUTPUT);
    Gpio_config (GPIO_PINS_PTC6, GPIO_PINS_OUTPUT);
    Gpio_config (GPIO_PINS_PTC5, GPIO_PINS_OUTPUT);
    Gpio_config (GPIO_PINS_PTC3, GPIO_PINS_OUTPUT);

    // CONFIGURAZIONE PIN SERVO
    Gpio_config (GPIO_PINS_PTA2, GPIO_PINS_OUTPUT);

    // CONNESSIONE EMETTITORE 1
    OhiGroveLed_Device EMITTER_1 =
    {
        .connector = OHIGROVE_CONN_D2,
    };

    // CONNESSIONE EMETTITORE 2
    OhiGroveLed_Device EMITTER_2 =
    {
        .connector = OHIGROVE_CONN_D3,
    };

    // CONNESSIONE EMETTITORE 3
    OhiGroveLed_Device EMITTER_3 =
    {
        .connector = OHIGROVE_CONN_D6,
    };
    // CONNESSIONE EMETTITORE 4
    OhiGroveLed_Device EMITTER_4 =
    {
        .connector = OHIGROVE_CONN_D7,
    };
    // CONNESSIONE EMETTITORE 5
    OhiGroveLed_Device EMITTER_5 =
    {
        .connector = OHIGROVE_CONN_D5,
    };


    // CONNESSIONE RICEVITORE 1
    OhiGroveAnalogIn_Device RECEIVER_1 =
    {
            .connector = OHIGROVE_CONN_A0,
    };

    // CONNESSIONE RICEVITORE 2
    OhiGroveAnalogIn_Device RECEIVER_2 =
    {
            .connector = OHIGROVE_CONN_A1,
    };

    // CONNESSIONE RICEVITORE 3
    OhiGroveAnalogIn_Device RECEIVER_3 =
    {
            .connector = OHIGROVE_CONN_A2,
    };

    // CONNESSIONE RICEVITORE 4
    OhiGroveAnalogIn_Device RECEIVER_4 =
    {
            .connector = OHIGROVE_CONN_A3,
    };


    // INIZIALIZZAZIONE
    OhiGrove_initBoard();
    OhiGroveLed_init (&EMITTER_1);
    OhiGroveLed_init (&EMITTER_2);
    OhiGroveLed_init (&EMITTER_3);
    OhiGroveLed_init (&EMITTER_4);
    OhiGroveLed_init (&EMITTER_5);

    OhiGroveAnalogIn_init (&RECEIVER_1);
    OhiGroveAnalogIn_init (&RECEIVER_2);
    OhiGroveAnalogIn_init (&RECEIVER_3);
    OhiGroveAnalogIn_init (&RECEIVER_4);
    Adc_enablePin(ADC0,ADC_PINS_PTE20);

    // CICLO FOR

    for(;;)
    {
        i++;   // IMPLEMENTO DEL CICLO

        if(VAR==0)
        {
            OhiGroveLed_on (&EMITTER_1);
            OhiGrove_delay(500);
            rx1 = OhiGroveAnalogIn_get (&RECEIVER_1);
            OhiGrove_delay(500);
            if (rx1 > 3850)
            {
                VAR=1;
                OhiGroveLed_off (&EMITTER_1);
            }
        }

        if(VAR==1)
        {
            OhiGroveLed_on (&EMITTER_2);
            OhiGrove_delay(1000);
            rx2 = OhiGroveAnalogIn_get (&RECEIVER_2);
            if (rx2 > 3905)
            {
                VAR=2;
                OhiGroveLed_off (&EMITTER_2);
            }
        }

        if(VAR==2)
        {
            OhiGroveLed_on (&EMITTER_3);
            OhiGrove_delay(100);
            rx3 = OhiGroveAnalogIn_get (&RECEIVER_3);
            if (rx3 > 3900)
            {
                VAR = 3;
                OhiGroveLed_off (&EMITTER_3);
            }
        }

        if(VAR==3)
        {
            OhiGroveLed_on (&EMITTER_4);
            OhiGrove_delay(100);
            rx4 = OhiGroveAnalogIn_get (&RECEIVER_4);
            if (rx4 > 3940)
            {
                VAR = 4;
                OhiGroveLed_off (&EMITTER_4);
            }
        }

        if(VAR==4)
        {
            OhiGroveLed_on (&EMITTER_5);
            OhiGrove_delay(100);
            Adc_readValue(ADC0,ADC_CH_SE0,&valRx5);
            if (valRx5 > 3942)
            {
                VAR = 5;
                OhiGroveLed_off (&EMITTER_5);
            }
        }

        if(VAR==5)
        {
            Gpio_set(GPIO_PINS_PTC3);
            Gpio_set(GPIO_PINS_PTC4);
            Gpio_set(GPIO_PINS_PTC5);
            Gpio_set(GPIO_PINS_PTC6);
            Gpio_set(GPIO_PINS_PTC10);
            Gpio_set(GPIO_PINS_PTC11);

            if(SERVO==1)
            {
                while(T < 39)           
                {
                    Gpio_set(GPIO_PINS_PTA2);
                    OhiGrove_delay(0.5);
                    Gpio_clear(GPIO_PINS_PTA2);
                    OhiGrove_delay(19.5);
                    T = T + 1;
                }
                T = 0;
                SERVO = 1;
            }
        }
    }
}